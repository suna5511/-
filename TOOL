链接：https://www.liaoxuefeng.com/wiki/896043488029600/896067008724000
安装网址：https://git-scm.com/downloads
一. 创建版本库
 $ mkdir learngit 创建目录
 $ cd learngit
 $ git init 初始化仓库
 $ git add readme.txt 添加文件
 $ git commit -m "注释"  提交文件
二. 版本回退
1. $ git log  查看历史
2. $ git log --pretty=oneline  精简消息
3. $ git reset --hard HEAD^  (上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100)
4. $ git reset --hard 1094a 指定回到之前的某个版本
5. $ git reflog  记录你的每一次命令
三. 工作区/暂存区/版本库/
1.工作区：就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区：
2.版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。
3.暂存区：需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改（git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。）
4. $ git status 查看暂存区
四.管理修改
1. $ git diff HEAD -- readme.txt 查看工作区和版本库里面最新版本的区别
2. $ git checkout -- readme.txt 丢弃工作区的修改
3. $ git reset HEAD readme.txt 可以把暂存区的修改撤销掉，重新放回工作区
4. $ git rm test.txt 删除工具库文件  $ git commit -m "remove test.txt" 把版本库的文件删除
五.远程仓库
1. $ git remote add origin git@github.com:michaelliao/learngit.git 先在github上创建仓库，然后将一个已有的本地仓库与之关联
2. $ git push -u origin master  把本地库的所有内容推送到远程库上（加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令）
3. $ git clone git@github.com:michaelliao/gitskills.git  克隆一个本地库，GitHub给出的地址不止一个，还可以用https://github.com/michaelliao/gitskills.git这样的地址。实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议



 
 
 
